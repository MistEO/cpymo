name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: MinSizeRel

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows-static
            script-postfix: bat
          - os: ubuntu-latest
            triplet: x64-linux-static
            script-postfix: sh
          - os: macos-latest
            triplet: x64-osx-static
            script-postfix: sh
            
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        
    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg --depth 1
        ./vcpkg/bootstrap-vcpkg.${{ script-postfix }}
        ./vcpkg/vcpkg install SDL2:${{ matrix.triplet }}
        ./vcpkg/vcpkg install ffmpeg:${{ matrix.triplet }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Upload
      uses: actions/upload-artifact@v2.3.0
      with:
        name: Build Artifact on ${{ runner.os }}
        path: |
            ./build/build/*cpymo*
            ./build/build/MinSizeRel/*cpymo*

      
